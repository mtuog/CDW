const axios = require('axios');

const BACKEND_URL = 'http://localhost:8080';

async function testNotificationAPI() {
    try {
        console.log('üîç Testing Notification API...\n');

        // 1. ƒêƒÉng nh·∫≠p admin
        console.log('1. ƒêƒÉng nh·∫≠p admin...');
        const loginResponse = await axios.post(`${BACKEND_URL}/api/auth/admin/login`, {
            username: 'admin',
            password: 'admin123'
        });
        
        const token = loginResponse.data.token;
        console.log('‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng\n');

        const headers = { 'Authorization': `Bearer ${token}` };

        // 2. Test unread count
        console.log('2. Ki·ªÉm tra s·ªë l∆∞·ª£ng th√¥ng b√°o ch∆∞a ƒë·ªçc...');
        try {
            const countResponse = await axios.get(`${BACKEND_URL}/api/admin/notifications/unread/count`, { headers });
            console.log(`‚úÖ S·ªë th√¥ng b√°o ch∆∞a ƒë·ªçc: ${countResponse.data.count}\n`);
        } catch (error) {
            console.error(`‚ùå L·ªói unread count: ${error.response?.status} - ${error.response?.data?.message || error.message}\n`);
        }

        // 3. Test get all notifications
        console.log('3. L·∫•y t·∫•t c·∫£ th√¥ng b√°o...');
        try {
            const allResponse = await axios.get(`${BACKEND_URL}/api/admin/notifications?page=0&size=10`, { headers });
            console.log(`‚úÖ T√¨m th·∫•y ${allResponse.data.content?.length || 0} th√¥ng b√°o`);
            console.log(`   T·ªïng s·ªë: ${allResponse.data.totalElements || 0}\n`);
        } catch (error) {
            console.error(`‚ùå L·ªói get all: ${error.response?.status} - ${error.response?.data?.message || error.message}\n`);
        }

        // 4. Test unread notifications
        console.log('4. L·∫•y th√¥ng b√°o ch∆∞a ƒë·ªçc...');
        try {
            const unreadResponse = await axios.get(`${BACKEND_URL}/api/admin/notifications/unread`, { headers });
            console.log(`‚úÖ T√¨m th·∫•y ${unreadResponse.data.length} th√¥ng b√°o ch∆∞a ƒë·ªçc\n`);
        } catch (error) {
            console.error(`‚ùå L·ªói unread: ${error.response?.status} - ${error.response?.data?.message || error.message}\n`);
        }

        // 5. Test by type
        console.log('5. L·∫•y th√¥ng b√°o theo lo·∫°i SYSTEM...');
        try {
            const typeResponse = await axios.get(`${BACKEND_URL}/api/admin/notifications/type/SYSTEM`, { headers });
            console.log(`‚úÖ T√¨m th·∫•y ${typeResponse.data.length} th√¥ng b√°o SYSTEM\n`);
        } catch (error) {
            console.error(`‚ùå L·ªói by type: ${error.response?.status} - ${error.response?.data?.message || error.message}\n`);
        }

        console.log('üéâ Test ho√†n th√†nh!');

    } catch (error) {
        console.error('‚ùå L·ªói ƒëƒÉng nh·∫≠p:', error.response?.data || error.message);
        
        if (error.response?.status === 404) {
            console.log('\nüí° Backend c√≥ th·ªÉ ch∆∞a ch·∫°y ho·∫∑c endpoint kh√¥ng t·ªìn t·∫°i');
        }
        
        if (error.response?.status === 401) {
            console.log('\nüí° L·ªói x√°c th·ª±c - ki·ªÉm tra username/password');
        }
    }
}

testNotificationAPI(); 